#!/usr/bin/env bash
# short wrapper to the earlier utility 'dataclip' which intends to make it
# easier to use that script  on a larger scale.
# $1 = site root level directory: e.g. /home/bbusey/working_files/barrow/intense_A/ (string)
# $2 = suffix for shortened data file
# $3 = number of lines to pull from the header (integer)
# $4 = number of lines to pull from the tail (integer)

sitedirectory=$1
# e.g.: sitedirectory="/home/bbusey/working_files/barrow/intense_A"
# these directory bits here I have basically standardized to.
outdirectory="$sitedirectory/outputs/"
webdirectory="$sitedirectory/web/"
linedirectory="$sitedirectory/web/one/"
if [ ! -d $linedirectory ]; then
    mkdir $linedirectory
fi

# loop through the csv files in the directory datapro outputs to:
for fname in `ls $outdirectory*.csv`; do

  # do some string manipulation to put together an output file name for the 
  # clipped data
  outlength=${#outdirectory}
  datafilelength=${#fname}
  position=$(($outlength))
  length=$(($datafilelength-$outlength-4))
  # data file name minus '.csv':
  datafilename=${fname:position:length}
  dataclip_infile="$fname"
  dataclip_outfile="$webdirectory$datafilename$2"
  single_suffix="_1.csv"
  oneline="$linedirectory$datafilename$single_suffix"
  # use dataclip to get a data file ready for web use.
  /usr/local/bin/dataclip $fname $dataclip_outfile $3 $4
#  echo $oneline
  tail -n1 $fname > $oneline
done


